{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-boostrap/app-boostrap.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/configure/configure.component.css","webpack:///./src/app/components/configure/configure.component.html","webpack:///./src/app/components/configure/configure.component.ts","webpack:///./src/app/components/disply-label-err-msgs/disply-label-err-msgs.component.css","webpack:///./src/app/components/disply-label-err-msgs/disply-label-err-msgs.component.html","webpack:///./src/app/components/disply-label-err-msgs/disply-label-err-msgs.component.ts","webpack:///./src/app/components/download-file/download-file.component.css","webpack:///./src/app/components/download-file/download-file.component.html","webpack:///./src/app/components/download-file/download-file.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/manage-assets/manage-assets.component.css","webpack:///./src/app/components/manage-assets/manage-assets.component.html","webpack:///./src/app/components/manage-assets/manage-assets.component.ts","webpack:///./src/app/components/manage-filter/manage-filter.component.css","webpack:///./src/app/components/manage-filter/manage-filter.component.html","webpack:///./src/app/components/manage-filter/manage-filter.component.ts","webpack:///./src/app/components/manage-jobs/manage-jobs.component.css","webpack:///./src/app/components/manage-jobs/manage-jobs.component.html","webpack:///./src/app/components/manage-jobs/manage-jobs.component.ts","webpack:///./src/app/components/online/online.component.css","webpack:///./src/app/components/online/online.component.html","webpack:///./src/app/components/online/online.component.ts","webpack:///./src/app/components/review-job/review-job.component.css","webpack:///./src/app/components/review-job/review-job.component.html","webpack:///./src/app/components/review-job/review-job.component.ts","webpack:///./src/app/components/schedule-job/schedule-job.component.css","webpack:///./src/app/components/schedule-job/schedule-job.component.html","webpack:///./src/app/components/schedule-job/schedule-job.component.ts","webpack:///./src/app/components/under-dev/under-dev.component.css","webpack:///./src/app/components/under-dev/under-dev.component.html","webpack:///./src/app/components/under-dev/under-dev.component.ts","webpack:///./src/app/components/upload-file/upload-file.component.css","webpack:///./src/app/components/upload-file/upload-file.component.html","webpack:///./src/app/components/upload-file/upload-file.component.ts","webpack:///./src/app/models/columnMenu.model.ts","webpack:///./src/app/models/configMail.ts","webpack:///./src/app/models/managejob.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/p-datatable/p-datatable.module.ts","webpack:///./src/app/shared/auth/auth-guard.service.ts","webpack:///./src/app/shared/auth/auth.service.ts","webpack:///./src/app/shared/data-table/data-table.service.ts","webpack:///./src/app/shared/handleToken/handle-token.service.ts","webpack:///./src/app/shared/http/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    TooltipModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [BsDropdownModule, TooltipModule, ModalModule]\r\n})\r\nexport class AppBoostrapModule {}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<spinner [backgroundColor]=\\\"'#ff0000'\\\" [spinner]=\\\"spinkit.skWave\\\" [debounceDelay]=\\\"100\\\" [minDuration]=\\\"300\\\">\\r\\n</spinner>\"","import { Component, TemplateRef } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Spinkit } from 'ng-http-loader';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: [\r\n    ``\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  public modalRef: BsModalRef;\r\n  spinkit = Spinkit;\r\n  constructor() {\r\n\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EditorModule } from 'primeng/editor';\r\nimport { AppBoostrapModule } from './app-boostrap/app-boostrap.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DisplyLabelErrMsgsComponent } from './components/disply-label-err-msgs/disply-label-err-msgs.component';\r\n// import { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HomeComponent } from './components/home/home.component';\r\n// import { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n// import { DataTableComponent } from './components/data-table/data-table.component';\r\nimport { ManageFilterComponent } from './components/manage-filter/manage-filter.component';\r\nimport { PDatatableModule } from './p-datatable/p-datatable.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AuthGuardService } from './shared/auth/auth-guard.service';\r\n// import { PDataTableComponent } from './components/p-data-table/p-data-table.component';\r\n// import { LoaderComponent } from './components/loader/loader.component'\r\n// import { HttpClientModule } from '@angular/common/http';\r\nimport { NgHttpLoaderModule } from 'ng-http-loader';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { UnderDevComponent } from './components/under-dev/under-dev.component';\r\nimport { HandleTokenService } from './shared/handleToken/handle-token.service';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\nimport { ScheduleJobComponent } from './components/schedule-job/schedule-job.component';\r\nimport { ReviewJobComponent } from './components/review-job/review-job.component';\r\nimport { UploadFileComponent } from '../../src/app/components/upload-file/upload-file.component';\r\nimport { DownloadFileComponent } from './components/download-file/download-file.component';\r\nimport { ManageJobsComponent } from './components/manage-jobs/manage-jobs.component';\r\nimport { ManageAssetsComponent } from './components/manage-assets/manage-assets.component';\r\nimport { ConfigureComponent } from './components/configure/configure.component';\r\nimport { OnlineComponent } from './components/online/online.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, LoginComponent, DisplyLabelErrMsgsComponent, HomeComponent, ManageFilterComponent, ManageJobsComponent, UnderDevComponent, ScheduleJobComponent, ReviewJobComponent, UploadFileComponent, DownloadFileComponent, ManageJobsComponent, ManageAssetsComponent, ConfigureComponent, OnlineComponent],\r\n  imports: [BrowserModule,\r\n    FormsModule,\r\n    PDatatableModule,\r\n    ReactiveFormsModule,\r\n    AppBoostrapModule,\r\n    BrowserAnimationsModule,\r\n    EditorModule,\r\n    // HttpModule,\r\n    JwtModule,\r\n    HttpClientModule,\r\n    NgHttpLoaderModule,\r\n    RouterModule.forRoot(\r\n      [\r\n        { path: 'login', component: LoginComponent },\r\n        {\r\n          path: 'home', component: HomeComponent, canActivate: [AuthGuardService], canActivateChild: [AuthGuardService], children: [\r\n            { path: 'jobresults', component: ManageJobsComponent },\r\n            { path: 'newschedule', component: ScheduleJobComponent },\r\n            { path: 'reviewjob', component: ReviewJobComponent },\r\n            { path: 'upload', component: UploadFileComponent },\r\n            { path: 'online', component: OnlineComponent },\r\n\r\n            { path: 'download', component: DownloadFileComponent },\r\n            { path: 'assets', component: ManageAssetsComponent },\r\n            { path: 'configure', component: ConfigureComponent },\r\n            { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n            { path: '**', component: UnderDevComponent }\r\n          ]\r\n        },\r\n        { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n        { path: '**', component: UnderDevComponent }\r\n      ],\r\n\r\n      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n\r\n  ],\r\n  providers: [HandleTokenService, MessageService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"label{\\n    font-weight: 400;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"col-md-2\\\">\\n      </div>\\n      <div class=\\\"col-md-10\\\">\\n        <h4 style=\\\" color: #068ff6;\\\">{{configureLabel.alertHeading}}</h4>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <form [formGroup]=\\\"configureForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"col-md-2\\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label for=\\\"company\\\" [ngClass]=\\\"{ 'required': submitted && f.company.errors }\\\">{{configureLabel.company}}</label>\\n            <select required class=\\\"form-control\\\" formControlName='company' id=\\\"company\\\">\\n              <ng-container *ngFor=\\\"let option of formDropdownList['companies']\\\">\\n                <option *ngIf=\\\"option.value\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\n              </ng-container>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-md-4\\\">\\n            <label [ngClass]=\\\"{ 'required': submitted && f.format.errors }\\\" for=\\\" format \\\">{{configureLabel.format}}</label>\\n            <select required class=\\\"form-control \\\" formControlName=\\\"format\\\" id=\\\"format \\\">\\n              <ng-container *ngFor=\\\"let option of formDropdownList[ 'formats'] \\\">\\n                <option *ngIf=\\\"option.value \\\" [ngValue]=\\\"option.value \\\">{{option.label}}</option>\\n              </ng-container>\\n            </select>\\n            <!-- <input type=\\\"password \\\" class=\\\"form-control \\\" id=\\\"inputPassword4 \\\" placeholder=\\\"Password \\\"> -->\\n          </div>\\n        </div>\\n\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row \\\">\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"type \\\" [ngClass]=\\\"{ 'required': submitted && f.type.errors }\\\">{{configureLabel.type}}</label>\\n            <select required class=\\\"form-control \\\" formControlName=\\\"type\\\" id=\\\"type \\\">\\n              <ng-container *ngFor=\\\"let option of formDropdownList[ 'types'] \\\">\\n                <option *ngIf=\\\"option.value \\\" [ngValue]=\\\"option.value \\\">{{option.label}}</option>\\n              </ng-container>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"TOmail \\\" [ngClass]=\\\"{ 'required': submitted && f.tomail.errors }\\\">{{configureLabel.tomail}}</label>\\n\\n            <input type=\\\"text \\\" required formControlName=\\\"tomail\\\" placeholder=\\\"abc@gmail.com \\\" class=\\\"form-control \\\" id=\\\"TOmail \\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row \\\">\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"status \\\" [ngClass]=\\\"{ 'required': submitted && f.status.errors }\\\">{{configureLabel.status}}</label>\\n            <select class=\\\"form-control \\\" required formControlName=\\\"status\\\" id=\\\"status \\\">\\n              <ng-container *ngFor=\\\"let option of formDropdownList[ 'status'] \\\">\\n                <option *ngIf=\\\"option.value \\\" [ngValue]=\\\"option.value \\\">{{option.label}}</option>\\n              </ng-container>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"CCmail \\\">{{configureLabel.ccmail}}</label>\\n            <input type=\\\"text \\\" class=\\\"form-control \\\" formControlName=\\\"ccmail\\\" id=\\\"CCmail \\\" placeholder=\\\"abc@gmail.com,bcd@gmail.com \\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row \\\">\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"environment \\\" [ngClass]=\\\"{ 'required': submitted && f.environment.errors }\\\">{{configureLabel.environment}}</label>\\n            <select class=\\\"form-control \\\" required formControlName='environment' id=\\\"environment \\\">\\n              <ng-container *ngFor=\\\"let option of formDropdownList[ 'environments'] \\\">\\n                <option *ngIf=\\\"option.value \\\" [ngValue]=\\\"option.value \\\">{{option.label}}</option>\\n              </ng-container>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group col-md-4 \\\">\\n            <label for=\\\"BCCmail \\\">{{configureLabel.bccmail}}</label>\\n            <input type=\\\"text \\\" class=\\\"form-control \\\" formControlName='bccmail' placeholder=\\\"abc@gmail.com, bcd@gmail.com\\n              \\\"\\n              id=\\\"BCCmail \\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row \\\">\\n\\n          <div class=\\\"form-group col-md-8 \\\">\\n            <label for=\\\"mailSubject \\\" [ngClass]=\\\"{ 'required': submitted && f.subject.errors }\\\">{{configureLabel.subject}}</label>\\n            <input type=\\\"text \\\" required class=\\\"form-control \\\" formControlName=\\\"subject\\\" id=\\\"mailSubject \\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-row \\\">\\n\\n          <div class=\\\"form-group col-md-8 \\\">\\n            <label for=\\\"mailSubject \\\">{{configureLabel.bodymail}}</label>\\n            <p-editor formControlName=\\\"bodymail\\\" [style]=\\\"{ 'height': '200px'} \\\"></p-editor>\\n            <br />\\n\\n            <div [(innerHTML)]=\\\"statusMsg\\\"></div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"row \\\">\\n      <div class=\\\"col-md-12 \\\">\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n        <div class=\\\"form-group col-md-8 t-align-right \\\" style=\\\"margin-top: 2rem; \\\">\\n\\n          <button class=\\\"btn app-back-color white-text \\\" style=\\\"outline:none ; padding: 3px 18px; margin-right: 10px\\n              \\\"\\n            type=\\\"submit \\\">{{buttonsLabels.save}}</button>\\n          <button class=\\\"btn app-back-color white-text \\\" type=\\\"button \\\" style=\\\"outline:none ; padding: 3px 18px; margin-right:\\n              10px \\\">{{buttonsLabels.sendTestNotifications}}</button>\\n          <button class=\\\"btn app-back-color white-text \\\" type=\\\"button \\\" (click)=\\\"initConfigureForm() \\\" style=\\\"outline:none\\n              ; padding: 3px 18px; \\\">{{buttonsLabels.clear}}</button>\\n        </div>\\n        <div class=\\\"col-md-2 \\\">\\n\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpService } from '../../shared/http/http.service';\nimport { ServerResponse } from '../../models/serverResponse.model';\nimport * as labelsData from '../../../assets/data/form-labels.json';\nimport { ManageJob } from '../../models/managejob.model';\nimport * as API_Link from '../../../assets/data/url.json';\nimport { ColumnMenu } from '../../models/columnMenu.model';\nimport { DataTableService } from '../../shared/data-table/data-table.service';\nimport * as ResponseCodes from '../../../assets/data/responseCodes.json';\nimport { ConfigMail } from '../../models/configMail';\n\n@Component({\n  selector: 'app-configure',\n  templateUrl: './configure.component.html',\n  styleUrls: ['./configure.component.css']\n})\nexport class ConfigureComponent implements OnInit {\n  bodyMail: String;\n  configureForm: FormGroup;\n  configureLabel: any;\n  buttonsLabels: any;\n  manageJobs: Array<ManageJob>;\n  formDropdownList: any = {};\n  statusMsg: String;\n  submitted: Boolean;\n  constructor(private formBuilder: FormBuilder, private http: HttpService, private dataTableService: DataTableService) { }\n\n  initConfigureForm() {\n    this.configureForm = this.formBuilder.group({\n      type: ['', Validators.required],\n      company: ['', Validators.required],\n      environment: ['', Validators.required],\n      format: ['', Validators.required],\n      tomail: ['', Validators.required], status: ['', Validators.required],\n      ccmail: [''],\n      bccmail: [''],\n      subject: ['', Validators.required],\n      bodymail: ['']\n    });\n  }\n\n  bindDropdownMenus() {\n    let typeColumnSet: Set<ColumnMenu> = new Set<ColumnMenu>();\n    let companyColumnSet: Set<ColumnMenu> = new Set<ColumnMenu>();\n    let envColumnSet: Set<ColumnMenu> = new Set<ColumnMenu>();\n    let statusColumnSet: Set<ColumnMenu> = new Set<ColumnMenu>();\n\n    // Fixme\n    for (let jobObj of this.manageJobs) {\n      // if (!this.typeColumnSet.has(new ColumnMenu(jobObj.type, jobObj.type))) {\n      typeColumnSet.add(new ColumnMenu(jobObj.type, jobObj.type));\n      //   }\n      companyColumnSet.add(new ColumnMenu(jobObj.company, jobObj.company));\n      envColumnSet.add(new ColumnMenu(jobObj.environment, jobObj.environment));\n      statusColumnSet.add(new ColumnMenu(jobObj.status, jobObj.status));\n    }\n\n    let format = [\n      {\n        id: \"html\",\n        label: \"HTML\",\n        value: \"html\"\n      }, {\n        id: \"pdf\",\n        label: \"PDF\",\n        value: \"pdf\"\n      },\n      {\n        id: \"xml\",\n        label: \"XML\",\n        value: \"xml\"\n      }\n    ];\n\n\n\n    this.formDropdownList['companies'] = this.dataTableService.removeDuplicates(Array.from(companyColumnSet.values()), 'label');\n    this.formDropdownList['formats'] = format;\n    this.formDropdownList['types'] = this.dataTableService.removeDuplicates(Array.from(typeColumnSet.values()), 'label');\n    this.formDropdownList['environments'] = this.dataTableService.removeDuplicates(Array.from(envColumnSet.values()), 'label');;\n    this.formDropdownList['status'] = this.dataTableService.removeDuplicates(Array.from(statusColumnSet.values()), 'label');;\n  }\n\n  ngOnInit() {\n    this.configureLabel = <any>labelsData.default.configurations;\n    this.buttonsLabels = <any>labelsData.default.buttonsText;\n    this.initConfigureForm();\n    this.fetchData((<any>API_Link).API + (<any>API_Link).MANAGE_FETCH_JOBS);\n  }\n\n  fetchData(url) {\n    this.http.sendGettRequest(url).subscribe((res: ServerResponse<ManageJob>) => {\n      console.log(res.results);\n      this.manageJobs = res.results;\n      this.bindDropdownMenus();\n    });\n  }\n  get f() { return this.configureForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.configureForm.invalid) {\n      this.statusMsg = '';\n      return;\n    }\n\n    let configMail = new ConfigMail();\n    configMail.EmailBCC = this.configureForm.value.bccmail;\n    configMail.EmailCC = this.configureForm.value.ccmail;\n    configMail.EmailFormat = this.configureForm.value.format;\n    configMail.EmailTo = this.configureForm.value.tomail;\n    configMail.Subject = this.configureForm.value.subject;\n    configMail.Body = this.configureForm.value.bodymail;\n    configMail.Enviornment = this.configureForm.value.environment;\n\n\n\n    this.http.sendPostRequest((<any>API_Link).API + (<any>API_Link).CONFIGURE_ALERT_NOTIFICATIONS, configMail).subscribe((res: any) => {\n      if (res.responseCode === ResponseCodes.default.SUCCESS) {\n        this.statusMsg = \"<span class='valid-feedback'>\" + res.message + \"</span>\";\n        this.initConfigureForm();\n      } else if (res.responseCode === ResponseCodes.default.DUPLICATE) {\n        this.statusMsg = \"<span class='required'>\" + res.message + \"</span>\";\n      } else {\n        this.statusMsg = \"<span class='required'>Something went wrong please try again!</span>\";\n      }\n      this.submitted = false;\n      setTimeout(function () {\n        this.statusMsg = '';\n      }.bind(this), 5000);\n    });\n\n    console.log(this.configureForm.value);\n  }\n\n}\n","module.exports = \".error-msg {\\r\\n    color: #a94442;\\r\\n  }\"","module.exports = \"<div *ngIf=\\\"displayError\\\">\\r\\n  <!-- <span class=\\\"glyphicon glyphicon-remove form-control-feedback \\\"></span> -->\\r\\n  <span class=\\\"sr-only\\\">(error)</span>\\r\\n  <div class=\\\"error-msg\\\">\\r\\n    {{errorMsg }}\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-disply-label-err-msgs',\r\n  templateUrl: './disply-label-err-msgs.component.html',\r\n  styleUrls: ['./disply-label-err-msgs.component.css']\r\n})\r\nexport class DisplyLabelErrMsgsComponent implements OnInit {\r\n  @Input() errorMsg: string;\r\n  @Input() displayError: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".mySign-up{\\n    padding: 0;\\n    /* width: 50%; */\\n    border: 1px solid lightgray;\\n    display: block;\\n}\\n.pageHead{\\n   \\n    margin-top: 1rem;\\n    margin-bottom: 1rem;\\n    font-size: 20px;\\n    color: #068ff6;\\n    font-weight: 600;\\n    text-align: center;\\n    /* color: #068ff6; */\\n}\\n.list-group{\\n    height: 400px;\\n    overflow: auto;\\n}\\n.list-group li{\\n    cursor: pointer;\\n    font-size: 16px;\\n}\\n.list-group li span.download{\\n    right: 8px;\\n    top: 9px;\\n    position: absolute;\\n    font-size: 25px;\\n}\\n.list-group li:hover{\\n    background: #efe5e5;\\n}\\n.no-files{\\n    text-align: center;\\n    font-size: 16px;\\n    font-weight: bold;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"col-md-3\\\">\\n\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"signup-form mySign-up\\\" style=\\\"padding: 0;\\\">\\n          <div class=\\\"pageHead\\\" *ngIf=\\\"fileList.length\\\">Download your files </div>\\n\\n          <ul class=\\\"list-group\\\" *ngIf=\\\"fileList.length\\\">\\n            <li class=\\\"list-group-item\\\" (click)=\\\"downloadFile(file)\\\" *ngFor=\\\"let file of fileList\\\">\\n              <span [ngClass]=\\\"getFileIcon(file)\\\"></span> {{file.fileName}}\\n              <span *ngIf=\\\"file.size\\\">({{file.size}})</span>\\n              <span class=\\\"glyphicon glyphicon-download download \\\"></span>\\n            </li>\\n\\n          </ul>\\n          <div class=\\\"no-files\\\" *ngIf=\\\"!fileList.length\\\">\\n            <span>No files to download!</span>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../shared/http/http.service';\nimport { API_URL } from '../../../environments/environment';\nimport * as ResponseCodes from '../../../assets/data/responseCodes.json';\nimport * as API_Link from '../../../assets/data/url.json';\n@Component({\n  selector: 'app-download-file',\n  templateUrl: './download-file.component.html',\n  styleUrls: ['./download-file.component.css']\n})\nexport class DownloadFileComponent implements OnInit {\n  statusMsg: String;\n  fileList: any[] = [];\n  constructor(private http: HttpService) { }\n\n  ngOnInit() {\n    this.fetchListOfFiles();\n  }\n  fileIcons = {\n    \".txt\": \"fa fa-file-text-o\",\n    \".pdf\": \"fa fa-file-pdf-o\",\n    \".doc\": \"fa fa-file-word-o\",\n    \".docx\": \"fa fa-file-word-o\",\n    \".xls\": \"fa fa-file-excel-o\",\n    \".xlsx\": \"fa fa-file-excel-o\",\n    \".png\": \"fa fa-file-image-o\",\n    \".jpeg\": \"fa fa-file-image-o\",\n    \".jpg\": \"fa fa-file-image-o\",\n    \".gif\": \"fa fa-file-o\",\n    \".csv\": \"fa fa-file-o\",\n    \".zip\": \"fa fa-file-zip-o\"\n  }\n\n  getFileIcon(file): string {\n    let fileTokens = file.fileName.split('.');\n    return this.fileIcons['.' + fileTokens[fileTokens.length - 1]]\n  }\n\n  downloadFile(file) {\n    console.log(file);\n    this.http.sendGetDownloadtRequest(API_URL + (<any>API_Link).DOWNLOAD, { 'fileName': file.fileName }).subscribe(res => {\n      // TODO: Download response\n    });\n  }\n\n  fetchListOfFiles() {\n    this.http.sendGettRequest(API_URL + (<any>API_Link).FECTH_DOWNLOAD_FILES).subscribe(res => {\n      if (res.responseCode === ResponseCodes.default.SUCCESS) {\n        this.fileList = res.results;\n      }\n      // if (res.responseCode === ResponseCodes.default.SUCCESS) {\n      //   this.statusMsg = \"<span class='valid-feedback'>\" + res.message + \"</span>\";\n      // } else {\n      //   this.statusMsg = \"<span class='required'>Something went wrong please try again!</span>\";\n      // }\n      // setTimeout(function () {\n      //   this.statusMsg = '';\n      // }.bind(this), 10000);\n    });\n  }\n\n}\n","module.exports = \".logo {\\r\\n    max-height: 160px;\\r\\n    /* padding-bottom: 5px; */\\r\\n  }\\r\\n  .h-120{\\r\\n    height: 120px;;\\r\\n  }\\r\\n  .c-cursor{\\r\\n  cursor: pointer;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container h-120\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <div>\\r\\n        <a class=\\\"navbar-brand\\\">\\r\\n          <img src=\\\"assets/img/iStar.png\\\" class=\\\"logo \\\">\\r\\n        </a>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 \\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 \\\">\\r\\n      <ul class=\\\"nav navbar-nav \\\">\\r\\n        <li class=\\\"active \\\">\\r\\n          <a routerLink=\\\"undeDev\\\">\\r\\n            <span class=\\\"glyphicon glyphicon-user \\\"></span> {{userInfo.userName}}\\r\\n          </a>\\r\\n        </li>\\r\\n        <li class=\\\"active c-cursor\\\" (click)=\\\"logout()\\\">\\r\\n          <a>\\r\\n            <span class=\\\"glyphicon glyphicon-log-out \\\"></span> LOGOUT\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"container-fluid \\\">\\r\\n  <div class=\\\"row \\\">\\r\\n    <nav class=\\\"navbar navbar-default \\\">\\r\\n      <div class=\\\"container \\\">\\r\\n        <ul class=\\\"nav navbar-nav\\\">\\r\\n          <li dropdown>\\r\\n            <a dropdownToggle class=\\\"dropdown-toggle \\\" role=\\\"button \\\">\\r\\n              <span class=\\\"glyphicon glyphicon-th\\\"> </span> MANAGE\\r\\n              <span class=\\\"caret \\\"></span>\\r\\n            </a>\\r\\n            <ul *dropdownMenu class=\\\"dropdown-menu \\\">\\r\\n              <li routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"jobresults\\\">Jobs</a>\\r\\n              </li>\\r\\n              <li role=\\\"separator \\\" class=\\\"divider \\\"></li>\\r\\n              <li routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"online\\\"> Online</a>\\r\\n              </li>\\r\\n              <li role=\\\"separator \\\" class=\\\"divider \\\"></li>\\r\\n              <li routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"undeDev\\\"> Schedule</a>\\r\\n              </li>\\r\\n              <li role=\\\"separator\\\" class=\\\"divider \\\"></li>\\r\\n              <li routerLinkActive=\\\"active\\\">\\r\\n                <a routerLink=\\\"assets\\\">Assets</a>\\r\\n              </li>\\r\\n\\r\\n            </ul>\\r\\n          </li>\\r\\n          <li class=\\\"\\\" routerLinkActive=\\\"active\\\">\\r\\n            <a routerLink=\\\"configure\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-wrench\\\"></span> CONFIGURE\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"\\\" routerLinkActive=\\\"active\\\">\\r\\n            <a routerLink=\\\"upload\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-upload\\\"></span> UPLOAD\\r\\n            </a>\\r\\n          </li>\\r\\n\\r\\n          <li class=\\\"\\\" routerLinkActive=\\\"active\\\">\\r\\n            <a routerLink=\\\"download\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-download\\\"></span> DOWNLOAD\\r\\n            </a>\\r\\n          </li>\\r\\n          <!-- <li class=\\\"\\\">\\r\\n            <a routerLink=\\\"/home/dummy\\\" routerLinkActive=\\\"active\\\">\\r\\n              <span class=\\\"glyphicon glyphicon-download\\\"></span> Dummy\\r\\n            </a>\\r\\n          </li> -->\\r\\n\\r\\n\\r\\n        </ul>\\r\\n      </div>\\r\\n    </nav>\\r\\n  </div>\\r\\n  <div class=\\\"container \\\">\\r\\n    <div class=\\\"row \\\">\\r\\n      <router-outlet>\\r\\n      </router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../../shared/http/http.service'\r\nimport { API_URL } from '../../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\n// import { Response } from '@angular/http';\r\nimport { ServerResponse } from '../../models/serverResponse.model'\r\nimport { User } from '../../models/user.model';\r\nimport { HandleTokenService } from '../../shared/handleToken/handle-token.service';\r\nimport { Router } from '@angular/router';\r\nimport * as API_Link from '../../../assets/data/url.json';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userInfo: User;\r\n  constructor(private http: HttpService, private tokenService: HandleTokenService, private router: Router) {\r\n    this.userInfo = new User();\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.removeToken();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  getLoggedUserInfo() {\r\n    this.http.sendGettRequest(API_URL + (<any>API_Link).USER_INFO).subscribe(\r\n      (response: ServerResponse<User>) => {\r\n        if (response.responseCode === 5555) {\r\n          // console.log(response.json());\r\n          this.userInfo = response.results[0];\r\n        } else {\r\n          // TODO handle failure case\r\n        }\r\n      });\r\n  }\r\n  ngOnInit() {\r\n    this.getLoggedUserInfo();\r\n  }\r\n\r\n}\r\n","module.exports = \"form label.error{\\r\\n    color:red;\\r\\n    font-size: 14px;\\r\\n    font-weight: normal;\\r\\n}\\r\\n.logo {\\r\\n    /* max-height: 30px;\\r\\n    padding-bottom: 5px; */\\r\\n  }\\r\\n.m-t-100{\\r\\n    margin-top:100px;\\r\\n  }\\r\\n\"","module.exports = \"<nav class=\\\"navbar \\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <a class=\\\"navbar-brand\\\">\\r\\n        <img src=\\\"assets/img/iStar.png\\\" class=\\\"logo\\\">\\r\\n      </a>\\r\\n      <!-- <span class=\\\"navbar-brand\\\">LOGO</span> -->\\r\\n    </div>\\r\\n    <div class=\\\"col-md-8\\\"></div>\\r\\n    <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n      <li class=\\\"active\\\">\\r\\n        <a href=\\\"#\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock\\\"></span> Login\\r\\n        </a>\\r\\n      </li>\\r\\n\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container m-t-100\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <span class=\\\"glyphicon glyphicon-lock\\\"></span> Login</div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"loginForm\\\" role=\\\"form\\\">\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('email')\\\">\\r\\n              <label for=\\\"userName\\\" class=\\\"col-sm-3 control-label\\\">\\r\\n                Email</label>\\r\\n              <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"userName\\\" required>\\r\\n                <app-disply-label-err-msgs [displayError]=\\\"isFieldValid('email')\\\" errorMsg=\\\"Please enter email.\\\">\\r\\n                </app-disply-label-err-msgs>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"displayFieldCss('password')\\\">\\r\\n              <label for=\\\"password\\\" class=\\\"col-sm-3 control-label\\\">\\r\\n                Password</label>\\r\\n              <div class=\\\"col-sm-9\\\">\\r\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required>\\r\\n                <app-disply-label-err-msgs [displayError]=\\\"isFieldValid('password')\\\" errorMsg=\\\"Please enter password.\\\">\\r\\n                </app-disply-label-err-msgs>\\r\\n\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <!-- <div class=\\\"col-sm-offset-3\\\"></div> -->\\r\\n              <div class=\\\"col-sm-offset-3 col-sm-6\\\">\\r\\n                <div class=\\\"checkbox\\\">\\r\\n                  <label>\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"keepSignin\\\" id=\\\"keepSignin\\\" /> Keep me signed in\\r\\n                  </label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-3 t-align-right\\\">\\r\\n                <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-success btn-sm\\\">\\r\\n                  Login</button>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group last\\\">\\r\\n\\r\\n            </div> -->\\r\\n          </form>\\r\\n          <app-disply-label-err-msgs [displayError]=\\\"isValidCredentials\\\" errorMsg=\\\"Please enter valid credentials.\\\">\\r\\n          </app-disply-label-err-msgs>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"panel-footer\\\">\\r\\n          <a href=\\\"\\\"> Forgot password?</a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <app-loader *ngIf=\\\"isLoading\\\"></app-loader> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpService } from '../../shared/http/http.service';\r\nimport { Router } from '@angular/router';\r\nimport { ServerResponse } from '../../models/serverResponse.model'\r\nimport { User } from '../../models/user.model';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\nimport { HandleTokenService } from '../../shared/handleToken/handle-token.service';\r\nimport { API_URL } from '../../../environments/environment';\r\nimport * as API_Link from '../../../assets/data/url.json';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: []\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  isValidCredentials: boolean;\r\n\r\n  constructor(private tokenService: HandleTokenService, private fb: FormBuilder, private http: HttpService, private router: Router, private auth: AuthService) {\r\n    this.loginForm = fb.group({\r\n      email: ['user1@gmail.com', Validators.required],\r\n      password: ['123', [Validators.required]],\r\n      keepSignin: [false]\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    console.log(this.loginForm);\r\n    let usrFormValues: User = this.loginForm.value;\r\n\r\n    this.http.sendPostRequest(API_URL + (<any>API_Link).LOGIN, usrFormValues).subscribe((res: ServerResponse<User>) => {\r\n      if (res.responseCode === 5555) {\r\n        this.isValidCredentials = false;\r\n        if (res.results.length && res.results[0].tokenId) {\r\n          // localStorage.setItem('tokenId', 'Bearer ' + res.results.tokenId);\r\n          this.tokenService.setToken('Bearer ' + res.results[0].tokenId);\r\n          this.router.navigate(['/home']);\r\n        }\r\n\r\n      } else if (res.responseCode === 2222) {\r\n      }\r\n      let self = this;\r\n      this.isValidCredentials = true;\r\n      setTimeout(function () {\r\n        self.isValidCredentials = false;\r\n      }, 5000);\r\n    }, (err) => {\r\n      this.isValidCredentials = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  isFieldValid(field: string) {\r\n    return !this.loginForm.get(field).valid && this.loginForm.get(field).touched;\r\n  }\r\n\r\n  displayFieldCss(field: string) {\r\n    return {\r\n      'has-error': this.isFieldValid(field),\r\n      'has-feedback': this.isFieldValid(field)\r\n    };\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    if (this.auth.isAuthenticated()) {\r\n      this.router.navigate(['home']);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"manageAssets\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" (sortFunction)=\\\"tableSort($event)\\\" [customSort]=\\\"true\\\">\\n  <ng-template pTemplate=\\\"caption\\\">\\n\\n    <div class=\\\"d-block\\\">\\n      <div class=\\\"d-inlline col-md-2 t-heading t-align-left\\\">\\n        Manage Assets\\n      </div>\\n      <div class=\\\"d-inlline pos-left-relative-85\\\">\\n        <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n        <input style=\\\"width:auto\\\" type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\">\\n      </div>\\n\\n    </div>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\n        {{col.header}}\\n        <p-sortIcon *ngIf=\\\"!col.isNoSorting\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n      </th>\\n      <!-- <th>\\n        Download\\n      </th>\\n      <th>\\n        Delete\\n      </th> -->\\n    </tr>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n        <p-dropdown *ngIf=\\\"!col.isInput && !col.isNotVisible\\\" [options]=\\\"col.columnList\\\" [style]=\\\"{'width':'100%'}\\\" (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n        <input *ngIf=\\\"col.isInput && !col.isNotVisible\\\" class=\\\"form-control\\\" type=\\\"text\\\" (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n      </th>\\n    </tr>\\n\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        <span *ngIf=\\\"!col.isLink\\\">{{rowData[col.field]}}</span>\\n        <span *ngIf=\\\"col.isLink\\\" style=\\\"color:blue; cursor: pointer;\\\" (click)=\\\"downloadOrDeleteAsset(rowData['filename'], col.field)\\\">\\n          {{rowData[col.field]}}\\n        </span>\\n      </td>\\n\\n    </tr>\\n  </ng-template>\\n\\n</p-table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../shared/http/http.service';\nimport { ServerResponse } from '../../models/serverResponse.model';\nimport { ColumnMenu } from '../../models/columnMenu.model';\nimport { DataTableService } from '../../shared/data-table/data-table.service';\nimport * as API_Link from '../../../assets/data/url.json';\n// import { API_URL } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-manage-assets',\n  templateUrl: './manage-assets.component.html',\n  styleUrls: ['./manage-assets.component.css']\n})\nexport class ManageAssetsComponent implements OnInit {\n  manageAssets: any;\n  cols: Array<any>;\n  typeColumnSet: Set<ColumnMenu>;\n  companyColumnSet: Set<ColumnMenu>;\n  statusColumnSet: Set<ColumnMenu>;\n\n\n  constructor(private http: HttpService, private dataTableService: DataTableService) { }\n\n  ngOnInit() {\n    this.typeColumnSet = new Set<ColumnMenu>();\n    this.companyColumnSet = new Set<ColumnMenu>();\n    this.statusColumnSet = new Set<ColumnMenu>();\n    // this.fetch('../../../assets/data/assets.json');\n    this.fetch((<any>API_Link).API + (<any>API_Link).FILTER_MANAGE_ASSETS);\n\n  }\n\n  bindDropdownMenus() {\n\n    this.typeColumnSet.add(new ColumnMenu('Any', null));\n    this.companyColumnSet.add(new ColumnMenu('Any', null));\n    this.statusColumnSet.add(new ColumnMenu('Any', null));\n\n    // this.typeColumnSet = this.removeDuplicates(this.manageJobs, 'type');\n    // this.companyColumnSet = this.removeDuplicates(this.manageJobs, 'company');\n    // this.profileColumnSet = this.removeDuplicates(this.manageJobs, 'profile');\n    // this.envColumnSet = this.removeDuplicates(this.manageJobs, 'environment');\n    // this.statusColumnSet = this.removeDuplicates(this.manageJobs, 'status');\n\n    // Fixme\n    for (let asstObj of this.manageAssets) {\n      // if (!this.typeColumnSet.has(new ColumnMenu(jobObj.type, jobObj.type))) {\n      this.typeColumnSet.add(new ColumnMenu(asstObj.type, asstObj.type));\n      //   }\n      this.companyColumnSet.add(new ColumnMenu(asstObj.company, asstObj.company));\n      this.statusColumnSet.add(new ColumnMenu(asstObj.status, asstObj.status));\n    }\n  }\n\n  fetch(url) {\n    // et params = new HttpParams().set(\"paramName\", paramValue).set(\"paramName2\", paramValueNext); //Create new HttpParams\n    this.http.sendGettRequest(url).subscribe((res: ServerResponse<any>) => {\n      console.log(res.results);\n      let responseObj = <any>res.results;\n      for (let astData of responseObj) {\n        astData['download'] = \"Download\";\n        astData['delete'] = \"Delete\";\n      }\n      // console.log(responseObj, '00000');\n      this.manageAssets = responseObj; //res.results;\n      this.bindDropdownMenus();\n      // yourArray.map((item: any) => item.id)\n      this.cols = [\n        { field: 'fileName', header: 'File name', isInput: true },\n        { field: 'type', header: 'Type', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.typeColumnSet.values()), 'label') },\n        { field: 'company', header: 'Company', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.companyColumnSet.values()), 'label') },\n        { field: 'createdDate', header: 'Uploaded Date', isInput: true },\n        { field: 'status', header: 'Status', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.statusColumnSet.values()), 'label') },\n        { field: 'download', header: ' ', isLink: true, isInput: true, isNotVisible: true, isNoSorting: true, width: '10%' },\n        { field: 'delete', header: ' ', isLink: true, isInput: true, isNotVisible: true, isNoSorting: true, width: '10%' }\n      ];\n    });\n\n  }\n\n\n  downloadOrDeleteAsset(fileName, flag) {\n    if (flag == 'download') {\n      this.http.sendGetDownloadtRequest((<any>API_Link).API + (<any>API_Link).DOWNLOAD, { 'fileName': fileName }).subscribe(res => {\n        // TODO: Download response\n      });\n    } else if (flag == 'delete') {\n\n      this.http.sendDeleteRequest((<any>API_Link).API + (<any>API_Link).DELETE_ASSETS, { 'fileName': fileName }).subscribe(res => {\n        // TODO: Download response\n      });\n    }\n  }\n\n  tableSort = this.dataTableService.tableSort;\n}\n","module.exports = \"/* .form-control{\\r\\n    width:100% !important;\\r\\n}\\r\\n\\r\\n/* .w-155-px{\\r\\n    width: 155px !important;\\r\\n}\\r\\n.m-l-32{\\r\\n    margin-left:32px;\\r\\n}\\r\\n.m-t-15{\\r\\n    margin-top:15px;\\r\\n}\\r\\n.m-l-5{\\r\\n    margin-left: 5px;\\r\\n}\\r\\n.m-l-23{\\r\\n    margin-left: 23px;\\r\\n}\\r\\n.m-l-neg-25{\\r\\n    margin-left: -25px;\\r\\n}\\r\\n.m-r-neg-25{\\r\\n    margin-right: -25px;\\r\\n}  */\\r\\nselect.form-control,\\r\\ninput.form-control{\\r\\n    width:140px !important;\\r\\n}\\r\\n.m-t-15{\\r\\n    margin-top:15px;\\r\\n}\\r\\n.form-inline label{\\r\\n    width:90px;\\r\\n    text-align: right;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n.p-l-0{\\r\\n    padding-left: 0px;\\r\\n}\\r\\n.m-r-neg-30{\\r\\n    margin-right: -30px;\\r\\n}\\r\\n.w-90{\\r\\n    width:90px;\\r\\n}\\r\\n.btn-pos{\\r\\n    position: relative;\\r\\n    top:50px;\\r\\n}\"","module.exports = \"<form class=\\\"form-inline\\\" action=\\\"/action_page.php\\\">\\r\\n  <div class=\\\"row m-l-neg-25\\\">\\r\\n    <div class=\\\"col-md-3 p-l-0 m-r-neg-30\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-3\\\"> -->\\r\\n          <label for=\\\"type\\\">Type</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-9\\\"> -->\\r\\n          <select class=\\\"form-control\\\" id=\\\"type\\\">\\r\\n            <option>any</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n          </select>\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12 m-t-15\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"company\\\">Company</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <select class=\\\"form-control w-155-px\\\" id=\\\"company\\\">\\r\\n            <option>any</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n          </select>\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3 p-l-0 m-r-neg-30\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"jobName\\\">Job</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"jobName\\\" name=\\\"jobName\\\">\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12  m-t-15\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"profile\\\">Profile</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <select class=\\\"form-control w-155-px\\\" id=\\\"profile\\\">\\r\\n            <option>any</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n          </select>\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 p-l-0 m-r-neg-30\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"oder\\\">Order #</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"order\\\" name=\\\"order\\\">\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12  m-t-15\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"jobId\\\">Job ID</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"jobId\\\" name=\\\"jobId\\\">\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-md-3 p-l-0 m-r-neg-30\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-4\\\"> -->\\r\\n          <label for=\\\"environment\\\">Environment</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-8\\\"> -->\\r\\n          <select class=\\\"form-control\\\" id=\\\"environment\\\">\\r\\n            <option>any</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n          </select>\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-12  m-t-15\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <!-- <div class=\\\"col-md-3\\\"> -->\\r\\n          <label for=\\\"status\\\">Satus</label>\\r\\n          <!-- </div> -->\\r\\n          <!-- <div class=\\\"col-md-9\\\"> -->\\r\\n          <select class=\\\"form-control \\\" id=\\\"status\\\">\\r\\n            <option>any</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n          </select>\\r\\n          <!-- </div> -->\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"w-90 col-md-3 m-r-neg-30\\\">\\r\\n      <!-- <div class=\\\"col-md-offset-12\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default m-l-32\\\">Search</button>\\r\\n      </div> -->\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-pos\\\">Search</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row m-t-15 m-l-neg-25 m-r-neg-25\\\">\\r\\n    <!-- <div class=\\\"col-md-3\\\">\\r\\n\\r\\n    </div> -->\\r\\n    <!-- \\r\\n    <div class=\\\"col-md-3\\\">\\r\\n  \\r\\n    </div> -->\\r\\n    <!-- \\r\\n    <div class=\\\"col-md-3\\\">\\r\\n\\r\\n    </div> -->\\r\\n    <!-- <div class=\\\"col-md-3\\\">\\r\\n\\r\\n\\r\\n   \\r\\n    </div> -->\\r\\n  </div>\\r\\n\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-manage-filter',\r\n  templateUrl: './manage-filter.component.html',\r\n  styleUrls: ['./manage-filter.component.css']\r\n})\r\nexport class ManageFilterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"/* .d-block{\\n    display: block;\\n}\\n.d-inlline{\\n    display: inline;\\n}\\n.t-heading{\\n    position: relative;\\n    left: -13px;\\n    margin-top: 5px;\\n}\\n.new-schedule-job-pos{\\n    position: relative;\\n    top: 35px;\\n    left:52px;\\n\\n}\\n.pos-left-relative-85{\\n    left: -85px;\\n    position: relative;\\n}\\n.pageTitle{\\n    text-align: center;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color:#068ff6;\\n\\n}\\n.model-header{\\n    padding-bottom: 0px;\\n}\\n.margin-top-2point5{\\n    margin-top: -2.5rem;\\n} */\"","module.exports = \"<button type=\\\"button\\\" (click)=\\\"openModal(scheduleJobTemplate)\\\"\\n  class=\\\"col-md-offset-10 btn white-text new-schedule-job-pos z-index-9 app-back-color\\\">\\n  New Schedule Job</button>\\n\\n<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"manageJobs\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" (sortFunction)=\\\"tableSort($event)\\\"\\n  [customSort]=\\\"true\\\">\\n  <ng-template pTemplate=\\\"caption\\\">\\n\\n    <div class=\\\"d-block\\\">\\n      <div class=\\\"d-inlline col-md-2 t-heading t-align-left\\\">\\n        Job Results\\n      </div>\\n      <div class=\\\"d-inlline pos-left-relative-85\\\">\\n        <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n        <input style=\\\"width:auto\\\" type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n          (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\">\\n      </div>\\n\\n    </div>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\n        {{col.header}}\\n        <p-sortIcon *ngIf=\\\"!col.isLink\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n      </th>\\n    </tr>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n        <p-dropdown *ngIf=\\\"!col.isInput && !col.isNotVisible\\\" [options]=\\\"col.columnList\\\" [style]=\\\"{'width':'100%'}\\\"\\n          (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n        <input *ngIf=\\\"col.isInput && !col.isNotVisible\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n          (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n      </th>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        <span *ngIf=\\\"!col.isLink\\\">{{rowData[col.field]}}</span>\\n        <span *ngIf=\\\"col.isLink\\\" style=\\\"color:blue; cursor: pointer;\\\"\\n          (click)=\\\"showReviewJob(rowData, col.field, reviewJobTemplate)\\\">\\n          {{rowData[col.field]}}\\n        </span>\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n</p-table>\\n\\n\\n<!-- Modal -->\\n<ng-template #scheduleJobTemplate>\\n  <div class=\\\"modal-header\\\" data-backdrop=\\\"static\\\" data-keyboard=\\\"false\\\" style=\\\"text-align: center\\\">\\n    <h4 class=\\\"modal-title\\\">\\n      <div class=\\\"pageTitle\\\">Schedule Job</div>\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right margin-top-2point5\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-schedule-job [(formData)]=\\\"cols\\\"></app-schedule-job>\\n  </div>\\n\\n</ng-template>\\n\\n<ng-template #reviewJobTemplate>\\n  <div class=\\\"modal-header\\\" style=\\\"text-align: center\\\">\\n    <h4 class=\\\"modal-title\\\">\\n      <div class=\\\"pageTitle\\\">Review Job</div>\\n    </h4>\\n    <button type=\\\"button\\\" class=\\\"close pull-right margin-top-2point5\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <app-review-job [(rowData)]=\\\"selectedRow\\\" (hideDialog)=\\\"modalRef.hide()\\\"></app-review-job>\\n  </div>\\n\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { HttpService } from '../../shared/http/http.service';\nimport { DataTableService } from '../../shared/data-table/data-table.service';\nimport { API_URL } from '../../../environments/environment';\nimport { ColumnMenu } from '../../models/columnMenu.model';\nimport { ServerResponse } from '../../models/serverResponse.model';\nimport { ManageJob } from '../../models/managejob.model';\nimport * as API_Link from '../../../assets/data/url.json';\nimport { Router } from '@angular/router';\n// import { Response } from '@angular/http';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\n\n@Component({\n  selector: 'app-manage-jobs',\n  templateUrl: './manage-jobs.component.html',\n  styleUrls: ['./manage-jobs.component.css']\n})\nexport class ManageJobsComponent implements OnInit {\n  modalRef: BsModalRef;\n  constructor(private http: HttpService, private modalService: BsModalService, private router: Router, private dataTableService: DataTableService) { }\n  manageJobs: Array<ManageJob>;\n  typeColumnSet: Set<ColumnMenu>;\n  companyColumnSet: Set<ColumnMenu>;\n  profileColumnSet: Set<ColumnMenu>;\n  envColumnSet: Set<ColumnMenu>;\n  statusColumnSet: Set<ColumnMenu>;\n  cols: any[];\n  selectedRow: any;\n  msgs: any;\n\n  ngOnInit() {\n    this.typeColumnSet = new Set<ColumnMenu>();\n    this.companyColumnSet = new Set<ColumnMenu>();\n    this.profileColumnSet = new Set<ColumnMenu>();\n    this.envColumnSet = new Set<ColumnMenu>();\n    this.statusColumnSet = new Set<ColumnMenu>();\n    this.selectedRow = {};\n    // this.fetch('../../../assets/data/company.json');\n    this.fetch(API_URL + (<any>API_Link).MANAGE_FETCH_JOBS);\n  }\n\n  openModal(template: TemplateRef<any>) {\n    let config = {\n      backdrop: true,\n      ignoreBackdropClick: true,\n      keyboard: false\n    };\n    this.modalRef = this.modalService.show(template, config);\n  }\n\n  // removeDuplicates(arr, prop) {\n  //   return arr.filter((obj, pos, arr) => {\n  //     return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\n  //   });\n  // }\n\n  bindDropdownMenus() {\n\n    this.typeColumnSet.add(new ColumnMenu('Any', null));\n    this.companyColumnSet.add(new ColumnMenu('Any', null));\n    this.profileColumnSet.add(new ColumnMenu('Any', null));\n    this.envColumnSet.add(new ColumnMenu('Any', null));\n    this.statusColumnSet.add(new ColumnMenu('Any', null));\n\n    // this.typeColumnSet = this.removeDuplicates(this.manageJobs, 'type');\n    // this.companyColumnSet = this.removeDuplicates(this.manageJobs, 'company');\n    // this.profileColumnSet = this.removeDuplicates(this.manageJobs, 'profile');\n    // this.envColumnSet = this.removeDuplicates(this.manageJobs, 'environment');\n    // this.statusColumnSet = this.removeDuplicates(this.manageJobs, 'status');\n\n    // Fixme\n    for (let jobObj of this.manageJobs) {\n      // if (!this.typeColumnSet.has(new ColumnMenu(jobObj.type, jobObj.type))) {\n      this.typeColumnSet.add(new ColumnMenu(jobObj.type, jobObj.type));\n      //   }\n      this.companyColumnSet.add(new ColumnMenu(jobObj.company, jobObj.company));\n      this.profileColumnSet.add(new ColumnMenu(jobObj.profile, jobObj.profile));\n      this.envColumnSet.add(new ColumnMenu(jobObj.environment, jobObj.environment));\n      this.statusColumnSet.add(new ColumnMenu(jobObj.status, jobObj.status));\n    }\n  }\n\n  fetch(url) {\n    // et params = new HttpParams().set(\"paramName\", paramValue).set(\"paramName2\", paramValueNext); //Create new HttpParams\n    this.http.sendGettRequest(url).subscribe((res: ServerResponse<ManageJob>) => {\n\n      for (let astData of res.results) {\n        astData['results'] = \"Results\";\n      }\n      console.log(res.results);\n      this.manageJobs = res.results;\n      this.bindDropdownMenus();\n      // yourArray.map((item: any) => item.id)\n      let typeArr = Array.from(this.typeColumnSet.values());\n      this.cols = [\n        { field: 'type', header: 'Type', isInput: false, columnList: this.dataTableService.removeDuplicates(typeArr, 'label') },\n        { field: 'company', header: 'Company', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.companyColumnSet.values()), 'label') },\n        { field: 'environment', header: 'Environment', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.envColumnSet.values()), 'label') },\n        { field: 'jobName', header: 'Job Name', isInput: true },\n        { field: 'profile', header: 'Profile', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.profileColumnSet.values()), 'label') },\n        { field: 'order', header: 'Order', isInput: true },\n        { field: 'jobId', header: 'Job ID', isInput: true },\n        { field: 'status', header: 'Status', isInput: false, columnList: this.dataTableService.removeDuplicates(Array.from(this.statusColumnSet.values()), 'label') },\n        { field: 'statusDate', header: 'Status date', isInput: true, isNotVisible: true },\n        { field: 'results', header: ' ', isLink: true, isInput: true, isNotVisible: true, isNoSorting: true },\n      ];\n    });\n\n  }\n\n  showReviewJob(data, flag, template: TemplateRef<any>) {\n    this.onRowSelect({ data: data }, template)\n  }\n\n  onRowSelect(event: any, template: TemplateRef<any>) {\n    // this.msgs = [{ severity: 'info', summary: 'Car Selected', detail: 'Vin: ' + event.data.vin }];\n    // console.log(event.data);\n    // this.router.navigate(['/home']);\n    this.selectedRow = event.data;\n    this.openModal(template);\n  }\n\n  tableSort = this.dataTableService.tableSort;\n  // tableSort(event: any) {\n  //   event.data.sort((data, dataNext) => {\n\n  //     let value = data[event.field];\n  //     let valueNext = dataNext[event.field];\n  //     let result = null;\n\n  //     if (value == null && valueNext != null) {\n  //       result = -1;\n  //     }\n  //     else if (value != null && valueNext == null) {\n  //       result = 1;\n  //     }\n  //     else if (value == null && valueNext == null) {\n  //       result = 0;\n  //     }\n  //     else if (event.field === \"statusDate\") {\n  //       let date = new Date(value);\n  //       let dateNext = new Date(valueNext);\n  //       if (!isNaN(date.getTime()) && !isNaN(dateNext.getTime())) {\n  //         result = (date.getTime() > dateNext.getTime()) ? 1 : -1;\n  //       }\n  //     }\n  //     else if (typeof value === 'string' && typeof valueNext === 'string') {\n\n  //       result = value.localeCompare(valueNext);\n  //     }\n  //     else {\n  //       result = (value < valueNext) ? -1 : (value > valueNext) ? 1 : 0;\n  //     }\n\n  //     return (event.order * result);\n  //   });\n  // }\n\n\n}\n","module.exports = \"\"","module.exports = \"<p-table #dt [columns]=\\\"cols\\\" [value]=\\\"manageOnline\\\" [paginator]=\\\"true\\\" sortField=\\\"createdDate\\\" [sortOrder]=\\\"-1\\\"\\n  [rows]=\\\"10\\\" (sortFunction)=\\\"tableSort($event)\\\" [customSort]=\\\"true\\\">\\n  <ng-template pTemplate=\\\"caption\\\">\\n\\n    <div class=\\\"d-block\\\">\\n      <div class=\\\"d-inlline col-md-2 t-heading t-align-left\\\">\\n        Online\\n      </div>\\n      <div class=\\\"d-inlline pos-left-relative-85\\\">\\n        <i class=\\\"fa fa-search\\\" style=\\\"margin:4px 4px 0 0\\\"></i>\\n        <input style=\\\"width:auto\\\" type=\\\"text\\\" pInputText size=\\\"50\\\" placeholder=\\\"Global Filter\\\"\\n          (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\">\\n      </div>\\n\\n    </div>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\n        {{col.header}}\\n        <p-sortIcon *ngIf=\\\"!col.isNoSorting\\\" [field]=\\\"col.field\\\"></p-sortIcon>\\n      </th>\\n      <!-- <th>\\n        Download\\n      </th>\\n      <th>\\n        Delete\\n      </th> -->\\n    </tr>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\" [ngSwitch]=\\\"col.field\\\">\\n        <p-dropdown *ngIf=\\\"!col.isInput && !col.isNotVisible\\\" [options]=\\\"col.columnList\\\" [style]=\\\"{'width':'100%'}\\\"\\n          (onChange)=\\\"dt.filter($event.value, col.field, 'equals')\\\"></p-dropdown>\\n        <input *ngIf=\\\"col.isInput && !col.isNotVisible\\\" class=\\\"form-control\\\" type=\\\"text\\\"\\n          (input)=\\\"dt.filter($event.target.value, col.field, col.filterMatchMode)\\\">\\n      </th>\\n    </tr>\\n\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        <span *ngIf=\\\"!col.isLink\\\">{{rowData[col.field]}}</span>\\n\\n      </td>\\n\\n    </tr>\\n  </ng-template>\\n\\n</p-table>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../shared/http/http.service';\nimport { ServerResponse } from '../../models/serverResponse.model';\nimport { ColumnMenu } from '../../models/columnMenu.model';\nimport { DataTableService } from '../../shared/data-table/data-table.service';\nimport * as API_Link from '../../../assets/data/url.json';\n\n@Component({\n  selector: 'app-online',\n  templateUrl: './online.component.html',\n  styleUrls: ['./online.component.css']\n})\nexport class OnlineComponent implements OnInit {\n  manageOnline: any;\n  cols: Array<any>;\n  constructor(private http: HttpService, private dataTableService: DataTableService) { }\n\n  ngOnInit() {\n    this.fetch((<any>API_Link).API + (<any>API_Link).GET_ORDERS);\n  }\n  tableSort = this.dataTableService.tableSort;\n\n  fetch(url) {\n    // et params = new HttpParams().set(\"paramName\", paramValue).set(\"paramName2\", paramValueNext); //Create new HttpParams\n    this.http.sendGettRequest(url).subscribe((res: ServerResponse<any>) => {\n      console.log(res.results);\n      let responseObj = <any>res.results;\n\n      // console.log(responseObj, '00000');\n      this.manageOnline = responseObj; //res.results;\n      // yourArray.map((item: any) => item.id)\n      this.cols = [\n        { field: 'orderId', header: 'Order ID', isInput: true },\n        { field: 'proofType', header: 'Proof Type', isInput: true },\n        { field: 'policyOrQuote', header: 'Policy or Quote', isInput: true },\n        { field: 'requestTime', header: 'Request Time', isNotVisible: true },\n        { field: 'fileSize', header: 'File Size', isInput: true },\n        { field: 'mode', header: 'Mode', isInput: true },\n        { field: 'orderedBy', header: 'Ordered By', isInput: true },\n        { field: 'active', header: 'Active', isInput: true },\n        { field: 'pages', header: 'Pages', isInput: true },\n        { field: 'createdDate', header: 'Created Date', isNotVisible: true },\n\n      ];\n    });\n\n  }\n\n}\n","module.exports = \".required{\\r\\n    color:red;\\r\\n  }\\r\\n  .margin-top-0px{\\r\\n      margin-top: 0;\\r\\n      margin-bottom: 0;\\r\\n      margin-bottom: 0.5rem;\\r\\n  }\\r\\n  .custom-dropdown{\\r\\n      height: 3rem;min-height: 0;margin-top: 7px;\\r\\n  }\\r\\n  .formFields-height{\\r\\n      height: 3rem;min-height: 0;margin-top: 7px;\\r\\n  }\\r\\n  .pageTitle{\\r\\n      text-align: center;\\r\\n      font-size: 20px;\\r\\n      font-weight: bold;\\r\\n      color:#068ff6;\\r\\n      margin-bottom: 1rem;\\r\\n      margin-top: 0.7rem;\\r\\n  }\\r\\n  .pageHeader{\\r\\n      background-color: #068ff6;\\r\\n      /* height: 3rem; */\\r\\n      color: #fff;\\r\\n      padding-top: 2px;\\r\\n      padding-left: 20px;\\r\\n      font-size: 16px;\\r\\n      font-weight: normal;\\r\\n      /* margin-top: 3rem; */\\r\\n  }\\r\\n  .form-control:focus {\\r\\n      border-color:#068ff6;\\r\\n  }\\r\\n  .signup-form {\\r\\n      width: 55rem;\\r\\n      /* margin: 0 auto; */\\r\\n      padding: 30px 0;\\r\\n  }\\r\\n  .signup-form form {\\r\\n      color: #999;\\r\\n      border-radius: 3px;\\r\\n      margin-bottom: 15px;\\r\\n      background: #fff;\\r\\n      /* box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3); */\\r\\n      padding: 30px;\\r\\n  }\\r\\n  .signup-form label {\\r\\n      font-weight: normal;\\r\\n      font-size: 14px;\\r\\n  }\\r\\n  a:link, a:visited,a.hover,a.active {\\r\\n      text-decoration: underline;\\r\\n      color: crimson;\\r\\n      margin-right: 1rem;\\r\\n  }\\r\\n  .link-row{\\r\\n      margin-bottom: 2rem;\\r\\n      text-align: center;\\r\\n      margin-top: 2rem;\\r\\n  }\\r\\n  .link-row span{\\r\\n    text-decoration: underline;\\r\\n    padding: 10px;\\r\\n    color: #980202;\\r\\n    font-weight: 500;\\r\\n    cursor: pointer;\\r\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"signup-form m-l-1rem\\\" style=\\\"padding: 0;\\\">\\r\\n      <form [formGroup]=\\\"reviewJob\\\" class=\\\"form-horizontal\\\" style=\\\"padding: 0;padding-bottom: 1rem;padding-top: 1rem;\\\">\\r\\n        <!-- <div class=\\\"pageTitle\\\">Review Job</div> -->\\r\\n        <div class=\\\"pageHeader\\\">Job Information</div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Type}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"type\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n              <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n            </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Company}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"company\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n              </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.jobId}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"jobID\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                  <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.jobName}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"jobName\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                    <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                  </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.scheduleDate}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"statusDate\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                      <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                    </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.scheduleTime}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"statusTime\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                        <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                      </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.currentStatus}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"currentStatus\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                          <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                        </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Environment}}\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"environment\\\" class=\\\"form-control formFields-height\\\" />\\r\\n            <!-- <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                            <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n                          </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row link-row\\\">\\r\\n          <span (click)=\\\"download('production.xls')\\\">{{linkLabels.productionSummary}}</span>\\r\\n          <span (click)=\\\"download('controlreport.xls')\\\">{{linkLabels.controlReport}}</span>\\r\\n          <span (click)=\\\"download('downloadProof.xls')\\\">{{linkLabels.downloadProofs}}</span>\\r\\n          <span (click)=\\\"approveJob(true)\\\">{{linkLabels.Approve}}</span>\\r\\n          <span (click)=\\\"approveJob(false)\\\">{{linkLabels.cancelJob}}</span>\\r\\n\\r\\n        </div>\\r\\n        <div style=\\\"border: 1px solid #ddd;\\\">\\r\\n          <table class=\\\"table table-striped\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n            <thead>\\r\\n              <tr class=\\\"pageHeader\\\">\\r\\n                <th style=\\\"padding-top: 0;padding-bottom: 0;padding-left: 2rem;\\\">Job Events</th>\\r\\n                <th style=\\\"padding-top: 0;padding-bottom: 0; padding-left: 2rem;\\\">Event Date</th>\\r\\n                <th style=\\\"padding-top: 0;padding-bottom: 0;padding-left: 2rem;\\\">User</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n          </table>\\r\\n          <div style=\\\"width:100%;overflow:auto; max-height:100px;\\\">\\r\\n            <table class=\\\"table table-striped\\\">\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let option of reviewJobEvents\\\">\\r\\n                  <td>{{option.jobEvents}}</td>\\r\\n                  <td>{{option.eventDate}}</td>\\r\\n                  <td>{{option.user}}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"h-30 t-align-center padding-all m-t-10\\\">\\r\\n            <span [(innerHTML)]=\\\"statusMsg\\\"></span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group text-center\\\" style=\\\"margin-top: 2rem;text-align: right;\\\">\\r\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"hidepopUp()\\\" style=\\\"outline:none;margin-right: 3.5rem !important;padding: 3px 18px; background-color: #068ff6;\\\">Close</button>\\r\\n        </div>\\r\\n        <!-- <div class=\\\"text-center\\\" style=\\\"margin-top: 1rem;\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Close</button>\\r\\n        </div> -->\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport * as labelsData from '../../../assets/data/form-labels.json';\r\nimport { HttpService } from '../../shared/http/http.service';\r\nimport { API_URL } from '../../../environments/environment';\r\nimport * as API_Link from '../../../assets/data/url.json';\r\nimport * as reviewJobEvents from '../../../assets/data/app-data.json';\r\n@Component({\r\n  selector: 'app-review-job',\r\n  templateUrl: './review-job.component.html',\r\n  styleUrls: ['./review-job.component.css']\r\n})\r\nexport class ReviewJobComponent implements OnInit {\r\n  @Input() rowData;\r\n  @Output() hideDialog: EventEmitter<any> = new EventEmitter();\r\n  jobLabels: any;\r\n  linkLabels: any;\r\n  reviewJob: FormGroup;\r\n  statusMsg: string;\r\n  reviewJobEvents: any;\r\n  constructor(private formBuilder: FormBuilder, private httpService: HttpService) { }\r\n\r\n  hidepopUp() {\r\n    this.hideDialog.emit();\r\n  }\r\n\r\n  download(fileName) {\r\n    this.httpService.sendGetDownloadtRequest(API_URL + (<any>API_Link).DOWNLOAD, { fileName: fileName }).subscribe(res => {\r\n\r\n      // TODO: hanld the download response\r\n    });\r\n  }\r\n\r\n  approveJob(isApprove) {\r\n    this.httpService.sendPostRequest(API_URL + (<any>API_Link).APPROVEREQUEST, { isApproved: isApprove, jobName: this.rowData.jobName }).subscribe(res => {\r\n      if (res.responseCode === 5555) {\r\n        this.statusMsg = \"<span class='valid-feedback'>\" + res.message + \"</span>\";\r\n      } else {\r\n        this.statusMsg = \"<span class='required'>Something went wrong please try again!</span>\";\r\n      }\r\n      setTimeout(function () {\r\n        this.statusMsg = '';\r\n      }.bind(this), 10000);\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.jobLabels = <any>labelsData.default.scheduleJob;\r\n    this.linkLabels = <any>labelsData.default.links;\r\n    this.reviewJobEvents = (<any>reviewJobEvents).reviewJobEvents;\r\n    console.log(reviewJobEvents);\r\n    console.log(this.linkLabels);\r\n    let stringToSplit = this.rowData.statusDate;\r\n    let date = stringToSplit.split(\" \");\r\n    this.reviewJob = this.formBuilder.group({\r\n      type: [{ value: this.rowData.type, disabled: true }],\r\n      company: [{ value: this.rowData.company, disabled: true }],\r\n      environment: [{ value: this.rowData.environment, disabled: true }],\r\n      jobID: [{ value: this.rowData.jobID, disabled: true }],\r\n      currentStatus: [{ value: this.rowData.status, disabled: true }],\r\n      jobName: [{ value: this.rowData.jobName, disabled: true }],\r\n      statusDate: [{ value: date[0], disabled: true }],\r\n      statusTime: [{ value: date[1] + \" \" + date[2], disabled: true }]\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n.margin-top-0px{\\r\\n    margin-top: 0;\\r\\n    margin-bottom: 0;\\r\\n    margin-bottom: 0.5rem;\\r\\n}\\r\\n.custom-dropdown{\\r\\n    height: 3rem;min-height: 0;margin-top: 7px;\\r\\n}\\r\\n.formFields-height{\\r\\n    height: 3rem;min-height: 0;margin-top: 7px;\\r\\n}\\r\\n.pageHeader{\\r\\n    background-color: #068ff6;\\r\\n    /* height: 3rem; */\\r\\n    color: #fff;\\r\\n    padding-top: 2px;\\r\\n    padding-left: 20px;\\r\\n    font-size: 16px;\\r\\n    font-weight: normal;\\r\\n    /* margin-top: 3rem; */\\r\\n}\\r\\n.form-control:focus {\\r\\n    border-color:#068ff6;\\r\\n}\\r\\n.signup-form {\\r\\n    width: 50rem;\\r\\n    margin-left:35px;\\r\\n    padding: 30px 0;\\r\\n}\\r\\n.signup-form form {\\r\\n    color: #999;\\r\\n    border-radius: 3px;\\r\\n    margin-bottom: 15px;\\r\\n    background: #fff;\\r\\n    /* box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3); */\\r\\n    padding: 30px;\\r\\n}\\r\\n.signup-form label {\\r\\n    font-weight: normal;\\r\\n    font-size: 14px;\\r\\n}\\r\\na:link, a:visited,a.hover,a.active {\\r\\n    text-decoration: underline;\\r\\n    color: crimson;\\r\\n    margin-right: 1rem;\\r\\n}\\r\\n.link-row-custom{\\r\\n    margin-bottom: 2rem;\\r\\n    text-align: center;\\r\\n    margin-top: 2rem;\\r\\n}\\r\\n.switch {\\r\\n    position: absolute;\\r\\n    width: 12rem;\\r\\n    height:2.5rem;\\r\\n    text-align: center;\\r\\n    /* background:#068ff6; */\\r\\n    transition: all 0.2s ease;\\r\\n    border-radius: 25px;\\r\\n    border: 1px solid #068ff6;\\r\\n  }\\r\\n/* .switch span {\\r\\n    position: absolute;\\r\\n    width: 20px;\\r\\n    height: 4px;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    margin: -2px 0px 0px -4px;\\r\\n    background: #fff;\\r\\n    display: block;\\r\\n    transform: rotate(-45deg);\\r\\n    transition: all 0.2s ease;\\r\\n  }\\r\\n  .switch span:after {\\r\\n    content: \\\"\\\";\\r\\n    display: block;\\r\\n    position: absolute;\\r\\n    width: 4px;\\r\\n    height: 12px;\\r\\n    margin-top: -8px;\\r\\n    background: #fff;\\r\\n    transition: all 0.2s ease;\\r\\n  }  */\\r\\ninput[type=radio] {\\r\\n    display: none;\\r\\n  }\\r\\n.switch label {\\r\\n    cursor: pointer;\\r\\n    color:#068ff6;\\r\\n    width: 6rem;\\r\\n    line-height: 2.5rem;\\r\\n    transition: all 0.2s ease;\\r\\n  }\\r\\nlabel[for=yes] {\\r\\n    position: absolute;\\r\\n    left: 0px;\\r\\n    /* height: 20px; */\\r\\n  }\\r\\nlabel[for=no] {\\r\\n    position: absolute;\\r\\n    right: 0px;\\r\\n  }\\r\\n/* #no:checked ~ .switch span {\\r\\n    background: #fff;\\r\\n    margin-left: -8px;\\r\\n  }\\r\\n  #no:checked ~ .switch span:after {\\r\\n    background: #fff;\\r\\n    height: 20px;\\r\\n    margin-top: -8px;\\r\\n    margin-left: 8px;\\r\\n  } */\\r\\n#yes:checked ~ .switch label[for=yes] {\\r\\n    color: #fff;\\r\\n    background-color:#068ff6;    \\r\\n    /* height: 23px; */\\r\\n    line-height: 2.3rem;\\r\\n  }\\r\\n#no:checked ~ .switch label[for=no] {\\r\\n    color: #fff;\\r\\n    background-color:#068ff6;\\r\\n    line-height: 2.3rem;\\r\\n  }\\r\\n \"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"signup-form\\\" style=\\\"padding: 0;\\\">\\r\\n      <form [formGroup]=\\\"registerForm\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"padding: 0;padding-bottom: 1rem;padding-top: 1rem;\\\">\\r\\n\\r\\n        <div class=\\\"pageHeader\\\">Job Configuration</div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Type}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <span class=\\\"input-group-btn\\\">\\r\\n              <select class=\\\"form-control formFields-height custom-dropdown\\\" formControlName=\\\"type\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.type.errors }\\\">\\r\\n                <!-- <option value=\\\"\\\">Select</option> -->\\r\\n                <ng-container *ngFor=\\\"let option of types\\\">\\r\\n                  <option *ngIf=\\\"option.value\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Company}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <span class=\\\"input-group-btn\\\">\\r\\n              <select class=\\\"form-control formFields-height custom-dropdown\\\" formControlName=\\\"company\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.company.errors }\\\">\\r\\n                <!-- <option value=\\\"\\\">Select</option> -->\\r\\n                <ng-container *ngFor=\\\"let option of companies\\\">\\r\\n                  <option *ngIf=\\\"option.value\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"pageHeader\\\">Job Information</div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.Environment}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <span class=\\\"input-group-btn\\\">\\r\\n              <select class=\\\"form-control formFields-height custom-dropdown\\\" formControlName=\\\"environment\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.environment.errors }\\\">\\r\\n                <!-- <option value=\\\"\\\">Select</option> -->\\r\\n                <ng-container *ngFor=\\\"let option of environments\\\">\\r\\n                  <option *ngIf=\\\"option.value\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\r\\n                </ng-container>\\r\\n              </select>\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{jobLabels.jobName}}\\r\\n            <span class=\\\"required\\\">*</span>\\r\\n          </label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"jobName\\\" class=\\\"form-control formFields-height\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.jobName.errors }\\\"\\r\\n            />\\r\\n            <div *ngIf=\\\"submitted && f.jobName.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n              <div *ngIf=\\\"f.jobName.errors.required\\\">Job Name is required</div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=false class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">Copy Type:</label>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=false class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">Statement Period:</label>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"pageHeader\\\">Job Scheduling</div>\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 0.5rem;padding-top: 0px;color: #777;\\\">{{jobLabels.runImmediately}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6\\\" style=\\\"margin-top: 0.5rem;\\\">\\r\\n            <div class=\\\"toggle-radio\\\">\\r\\n              <input type=\\\"radio\\\" value=\\\"true\\\" formControlName=\\\"runImmediately\\\" id=\\\"yes\\\">\\r\\n              <input type=\\\"radio\\\" value=\\\"false\\\" formControlName=\\\"runImmediately\\\" id=\\\"no\\\" [checked]=\\\"true\\\">\\r\\n              <div class=\\\"switch\\\">\\r\\n                <label for=\\\"yes\\\" style=\\\"border-bottom-left-radius: 12px;border-top-left-radius: 12px;\\\">Yes</label>\\r\\n                <label for=\\\"no\\\" style=\\\"border-bottom-right-radius: 12px;border-top-right-radius: 12px;\\\">No</label>\\r\\n                <span></span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 1.5rem;padding-top: 0px;color: #777;\\\">{{jobLabels.scheduleDate}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6 m-t-1rem\\\">\\r\\n            <p-calendar formControlName=\\\"date\\\" [utc]='true' [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\" [showIcon]=\\\"true\\\"></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group margin-top-0px\\\">\\r\\n          <label class=\\\"control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 1rem;padding-top: 0px;color: #777;\\\">{{jobLabels.scheduleTime}}</label>\\r\\n          <div class=\\\"col-xs-6 col-md-6 m-t-0-5rem\\\">\\r\\n            <p-calendar formControlName=\\\"time\\\" [utc]='true' [hourFormat]=\\\"12\\\" [timeOnly]=\\\"true\\\"></p-calendar>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row t-align-center\\\">\\r\\n          <div [(innerHTML)]=\\\"statusMsg\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group t-align-right\\\" style=\\\"margin-top: 2rem;\\\">\\r\\n          <button class=\\\"btn app-back-color white-text\\\" style=\\\"outline:none;margin-right: 10.5rem !important;padding: 3px 18px; \\\">Save</button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport * as labelsData from '../../../assets/data/form-labels.json';\r\nimport { HttpService } from '../../shared/http/http.service';\r\nimport { API_URL } from '../../../environments/environment';\r\nimport { ServerResponse } from '../../models/serverResponse.model';\r\nimport * as ResponseCodes from '../../../assets/data/responseCodes.json';\r\nimport * as API_Link from '../../../assets/data/url.json';\r\n\r\n@Component({\r\n  selector: 'app-schedule-job',\r\n  templateUrl: './schedule-job.component.html',\r\n  styleUrls: ['./schedule-job.component.css']\r\n})\r\nexport class ScheduleJobComponent implements OnInit {\r\n  @Input() formData;\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n  jobLabels: any;\r\n  statusMsg: string;\r\n  types: any;\r\n  companies: any;\r\n  environments: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpService) { }\r\n\r\n  initForm() {\r\n    this.types = this.formData[0].columnList;\r\n    this.companies = this.formData[1].columnList;\r\n    this.environments = this.formData[2].columnList;\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      type: [this.types[1].value],\r\n      company: [this.companies[1].value],\r\n      environment: [this.environments[1].value],\r\n      jobName: ['', Validators.required],\r\n      date: [''], time: [''],\r\n      runImmediately: ['false']\r\n    });\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.jobLabels = <any>labelsData.default.scheduleJob;\r\n    this.initForm();\r\n    console.log(this)\r\n  }\r\n\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.registerForm.invalid) {\r\n      this.statusMsg = '';\r\n      return;\r\n    }\r\n\r\n\r\n    this.http.sendFileUploadPostRequest(API_URL + (<any>API_Link).SCHEDULE_JOB, this.registerForm.value).subscribe((res: ServerResponse<any>) => {\r\n      if (res.responseCode === ResponseCodes.default.SUCCESS) {\r\n        this.statusMsg = \"<span class='valid-feedback'>\" + res.message + \"</span>\";\r\n        this.initForm();\r\n      } else if (res.responseCode === ResponseCodes.default.DUPLICATE) {\r\n        this.statusMsg = \"<span class='required'>\" + res.message + \"</span>\";\r\n      } else {\r\n        this.statusMsg = \"<span class='required'>Something went wrong please try again!</span>\";\r\n      }\r\n      this.submitted = false;\r\n      setTimeout(function () {\r\n        this.statusMsg = '';\r\n      }.bind(this), 5000);\r\n    });\r\n    // alert(JSON.stringify(this.registerForm.value));\r\n    // console.log(JSON.stringify(this.registerForm.value));\r\n  }\r\n}","module.exports = \"p{\\r\\n    text-align: center;\\r\\n    font-size: 20px;\\r\\n    font-weight: bold;\\r\\n    color: red;\\r\\n}\"","module.exports = \"<p>\\r\\n  Under development\\r\\n</p>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-under-dev',\r\n  templateUrl: './under-dev.component.html',\r\n  styleUrls: ['./under-dev.component.css']\r\n})\r\nexport class UnderDevComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"input[type=\\\"file\\\"] {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.custom-file-upload {\\r\\n    display: inline-block;\\r\\n    color: #fff;\\r\\n    padding: 6px 12px;\\r\\n    cursor: pointer;\\r\\n    background-color:#068ff6;\\r\\n    padding: 4px 12px;\\r\\n    margin-top: 0.5rem;\\r\\n    border-radius: 0.5rem;\\r\\n}\\r\\n\\r\\n.mySign-up{\\r\\n    padding: 0;\\r\\n    /* width: 50%; */\\r\\n    border: 1px solid lightgray;\\r\\n}\\r\\n\\r\\n.pageHead{\\r\\n    margin-top: 3rem;\\r\\n    font-size: 20px;\\r\\n    color: #068ff6;\\r\\n    font-weight: 600;\\r\\n    text-align: center;\\r\\n    /* color: #068ff6; */\\r\\n}\\r\\n\\r\\n.font-weight-0{\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.formFields-height{\\r\\n    font-size:14px;margin-top: 0.5rem;height: 30px;\\r\\n}\\r\\n\\r\\n.margin-top-1{\\r\\n    margin-top:0.5rem;\\r\\n}\\r\\n\\r\\n.selected-file {\\r\\n    height: 30px;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"signup-form mySign-up\\\" style=\\\"padding: 0;\\\">\\r\\n          <div class=\\\"pageHead\\\">Upload Extract </div>\\r\\n          <form [formGroup]=\\\"uploadForm\\\" class=\\\"form-horizontal\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"padding: 0;padding-bottom: 1rem;padding-top: 1rem;\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group margin-top-0px\\\">\\r\\n              <label class=\\\"font-weight-0 control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{uploadFileLables.product}}\\r\\n\\r\\n              </label>\\r\\n              <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                  <select class=\\\"form-control formFields-height custom-dropdown\\\" formControlName=\\\"product\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.product.errors }\\\">\\r\\n                    <!-- <option value=\\\"\\\">Select</option> -->\\r\\n                    <option *ngFor=\\\"let option of products\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\r\\n                  </select>\\r\\n                </span>\\r\\n                <div *ngIf=\\\"submitted && f.product.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                  <div *ngIf=\\\"f.product.errors.required\\\">Product is required</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form-group margin-top-0px\\\">\\r\\n              <label class=\\\"font-weight-0 control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{uploadFileLables.environment}}\\r\\n              </label>\\r\\n              <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n                <span class=\\\"input-group-btn\\\">\\r\\n                  <select class=\\\"form-control formFields-height custom-dropdown\\\" formControlName=\\\"environment\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.environment.errors }\\\">\\r\\n                    <!-- <option value=\\\"\\\">Select</option> -->\\r\\n                    <option *ngFor=\\\"let option of environment\\\" [ngValue]=\\\"option.value\\\">{{option.label}}</option>\\r\\n                  </select>\\r\\n                </span>\\r\\n                <div *ngIf=\\\"submitted && f.environment.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                  <div *ngIf=\\\"f.environment.errors.required\\\">Environment is required</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group margin-top-0px\\\">\\r\\n              <label class=\\\"font-weight-0 control-label col-xs-4 col-md-4\\\" style=\\\"margin-top: 11px;padding-top: 0px;color: #777;\\\">{{uploadFileLables.selectFile}}\\r\\n                <span class=\\\"required\\\">*</span>\\r\\n              </label>\\r\\n              <div class=\\\"col-xs-6 col-md-6\\\">\\r\\n                <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\r\\n                  <i class=\\\"fa fa-cloud-upload\\\"></i> Browse\\r\\n                </label>\\r\\n                <input (change)=\\\"uploadFile($event)\\\" id=\\\"file-upload\\\" formControlName=\\\"file\\\" type=\\\"file\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.file.errors }\\\"\\r\\n                />\\r\\n                <div class=\\\"selected-file\\\" title=\\\"{{selectedFileName}}\\\"> {{selectedFileName}}</div>\\r\\n                <!-- <div *ngIf=\\\"submitted && f.file.errors\\\" class=\\\"invalid-feedback required\\\">\\r\\n                      <div *ngIf=\\\"f.file.errors.required\\\">Please select a file.</div>\\r\\n                    </div> -->\\r\\n                <div *ngIf=\\\"fileStatusMsg\\\">\\r\\n                  <div innerHTML=\\\"{{fileStatusMsg}}\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-12 form-group\\\" style=\\\"margin-left: 0.1rem;\\\">\\r\\n              <div class=\\\"col-md-8\\\"></div>\\r\\n              <div class=\\\"col-md-4\\\">\\r\\n                <button class=\\\"btn app-back-color white-text\\\" style=\\\"outline:none;padding: 3px 18px; \\\">Upload</button>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"p-5rem p-bottom-0\\\">\\r\\n              <h4>Note:</h4>\\r\\n              <p>\\r\\n                Browser will allow you to select file from computer There is validation process built in which not allow you to upload file\\r\\n                with a dublicate name .selected desired file.\\r\\n              </p>\\r\\n            </div>\\r\\n\\r\\n            <!-- <label for=\\\"file-upload\\\" class=\\\"custom-file-upload\\\">\\r\\n                  <i class=\\\"fa fa-cloud-upload\\\"></i> Custom Upload\\r\\n                </label> -->\\r\\n            <!-- <input id=\\\"file-upload\\\" type=\\\"file\\\" /> -->\\r\\n\\r\\n            <!-- <div class=\\\"form-group text-center\\\" style=\\\"margin-top: 2rem;text-align: right;\\\">\\r\\n                  <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\" style=\\\"outline:none;margin-right: 10.5rem !important;padding: 3px 18px; background-color: #068ff6;\\\">Save</button>\\r\\n                </div> -->\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, RequiredValidator } from '@angular/forms';\r\nimport { ServerResponse } from '../../models/serverResponse.model';\r\nimport { HttpService } from '../../shared/http/http.service';\r\nimport { API_URL } from '../../../environments/environment';\r\nimport * as labelsData from '../../../assets/data/form-labels.json';\r\nimport * as ResponseCodes from '../../../assets/data/responseCodes.json';\r\nimport * as API_Link from '../../../assets/data/url.json';\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n  submitted = false;\r\n  uploadForm: FormGroup;\r\n  products: any;\r\n  environment: any;\r\n  files: any;\r\n  uploadFileLables: any;\r\n  selectedFileName: string;\r\n  fileStatusMsg: string;\r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpService) { }\r\n\r\n  initForm() {\r\n    this.uploadForm = this.formBuilder.group({\r\n      product: [this.products[0].value, Validators.required],\r\n      environment: [this.environment[0].value, Validators.required],\r\n      file: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.uploadFileLables = <any>labelsData.default.uploadFileLables;\r\n    this.products = [\r\n      {\r\n        label: 'Tax',\r\n        value: 'tax'\r\n      },\r\n      {\r\n        label: 'Perl',\r\n        value: 'perl'\r\n      },\r\n      {\r\n        label: 'Python',\r\n        value: 'python'\r\n      },\r\n      {\r\n        label: 'Font',\r\n        value: 'font'\r\n      }\r\n    ];\r\n\r\n    this.environment = [\r\n      {\r\n        label: 'Production',\r\n        value: 'production'\r\n      },\r\n      {\r\n        label: 'Development',\r\n        value: 'developement'\r\n      },\r\n      {\r\n        label: 'Testing',\r\n        value: 'testing'\r\n      }\r\n    ];\r\n    this.initForm();\r\n\r\n  }\r\n\r\n\r\n  get f() { return this.uploadForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.uploadForm.invalid) {\r\n      this.fileStatusMsg = \"<span class='required'> Please select a file.</span>\";;\r\n      return;\r\n    }\r\n    let formObj = this.uploadForm.value;\r\n    formObj.file = this.files;\r\n    let formData = new FormData();\r\n    for (let index = 0; index < this.files.length; index++) {\r\n      formData.append(\"files\", this.files[index]);\r\n    }\r\n    formData.append('Content-Type', 'multipart/form-data');\r\n    formData.append('Product', formObj.product);\r\n    formData.append('Environment', formObj.environment);\r\n    console.log(this.files);\r\n    this.http.sendFileUploadPostRequest(API_URL + (<any>API_Link).UPLOAD_FILE, formData).subscribe((res: ServerResponse<any>) => {\r\n      if (res.responseCode === ResponseCodes.default.SUCCESS) {\r\n\r\n        this.fileStatusMsg = \"<span class='valid-feedback'>\" + res.message + \"</span>\";\r\n        this.selectedFileName = '';\r\n        this.initForm();\r\n      } else if (res.responseCode === ResponseCodes.default.DUPLICATE) {\r\n        // this.submitted = false;\r\n        this.fileStatusMsg = \"<span class='required'> \" + res.message + \"</span>\";\r\n      } else {\r\n        this.fileStatusMsg = \"<span class='required'>Something went wrong please try again.</span>\";\r\n      }\r\n      this.submitted = false;\r\n\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n    // console.log(this.uploadForm.value)\r\n  }\r\n\r\n  uploadFile(event) {\r\n    let fileSize = event.target.files[0].size / 1024 / 1024;\r\n    if (fileSize > 5) {\r\n      this.fileStatusMsg = '<span class=\"required\">File size should not exceed 5MB.</span>';\r\n      return;\r\n    }\r\n    this.fileStatusMsg = '';\r\n    this.files = event.target.files;\r\n    this.selectedFileName = this.files[0].name;\r\n  }\r\n\r\n}\r\n","\r\n// export interface SetItem {\r\n//     equals(other: ColumnMenu): boolean;\r\n// }\r\nexport class ColumnMenu {\r\n    constructor(private label, private value, private id = null) {\r\n    }\r\n}\r\n\r\n// export class SetColumnMenu<T extends ColumnMenu> extends Set<T>{\r\n//     // public SetColumnMenu() {\r\n//     //     super();\r\n//     //     return new Set();\r\n//     // }\r\n\r\n//     add(value: T): this {\r\n//         let found = false;\r\n//         this.forEach(item => {\r\n//             if (value === item) {\r\n//                 found = true;\r\n//             }\r\n//         });\r\n\r\n//         if (!found) {\r\n//             super.add(value);\r\n//         }\r\n\r\n//         return this;\r\n//     }\r\n// }\r\n","import { ManageJob } from \"./managejob.model\";\n\nexport class ConfigMail extends ManageJob {\n    public Id: number;\n    public EmailFormat: string\n    public EmailTo: string\n    public EmailCC: string\n    public EmailBCC: string\n    public Subject: string\n    public Body: string\n    public Enviornment: string\n\n}","export class ManageJob {\r\n    public manageId: number;\r\n    public profile: string\r\n    public type: string\r\n    public company: string\r\n    public environment: string\r\n    public jobName: string\r\n    public order: string\r\n    public jobId: string\r\n    public status: string\r\n    public statusDate: string\r\n}","export class User {\r\n    public userName: string;\r\n    public password: string;\r\n    public keepSignin: boolean;\r\n    public tokenId: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { GrowlModule } from 'primeng/growl';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { CalendarModule } from 'primeng/calendar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TableModule,\r\n    DropdownModule,\r\n    MultiSelectModule,\r\n    InputTextModule,\r\n    GrowlModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    CalendarModule\r\n  ],\r\n  exports: [CommonModule, TableModule, DropdownModule, MultiSelectModule, InputTextModule, GrowlModule, MessagesModule,\r\n    MessageModule, CalendarModule]\r\n})\r\nexport class PDatatableModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router, CanActivate, ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  CanActivateChild\r\n} from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate, CanActivateChild {\r\n\r\n  constructor(public auth: AuthService, public router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HandleTokenService } from '../handleToken/handle-token.service';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private tokenService: HandleTokenService, private messageService: MessageService) { }\r\n  // ...\r\n  public isAuthenticated(): boolean {\r\n    const token = this.tokenService.getToken();\r\n    let jwtHelper = new JwtHelperService();\r\n    // Check whether the token is expired and return\r\n    // true or false\r\n    if (!token) {\r\n      return false;\r\n    }\r\n    let isExpired = jwtHelper.isTokenExpired(token);\r\n    if (isExpired) {\r\n      this.tokenService.removeToken();\r\n      this.messageService.add({ severity: 'success', summary: 'Service Message', detail: 'Via MessageService' });\r\n    }\r\n    return !isExpired;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataTableService {\r\n\r\n  constructor() { }\r\n\r\n  removeDuplicates(arr, prop) {\r\n    return arr.filter((obj, pos, arr) => {\r\n      return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;\r\n    });\r\n  }\r\n\r\n  tableSort(event: any) {\r\n    event.data.sort((data, dataNext) => {\r\n\r\n      let value = data[event.field];\r\n      let valueNext = dataNext[event.field];\r\n      let result = null;\r\n\r\n      if (value == null && valueNext != null) {\r\n        result = -1;\r\n      }\r\n      else if (value != null && valueNext == null) {\r\n        result = 1;\r\n      }\r\n      else if (value == null && valueNext == null) {\r\n        result = 0;\r\n      }\r\n      else if (event.field === \"statusDate\") {\r\n        let date = new Date(value);\r\n        let dateNext = new Date(valueNext);\r\n        if (!isNaN(date.getTime()) && !isNaN(dateNext.getTime())) {\r\n          result = (date.getTime() > dateNext.getTime()) ? 1 : -1;\r\n        }\r\n      }\r\n      else if (typeof value === 'string' && typeof valueNext === 'string') {\r\n\r\n        result = value.localeCompare(valueNext);\r\n      }\r\n      else {\r\n        result = (value < valueNext) ? -1 : (value > valueNext) ? 1 : 0;\r\n      }\r\n\r\n      return (event.order * result);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HandleTokenService {\r\n\r\n  constructor() { }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('tokenId');\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem('tokenId', token);\r\n  }\r\n\r\n  removeToken(key?) {\r\n    localStorage.removeItem(key || 'tokenId');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n// import { Http, Headers, Response } from '@angular/http';\r\n// import { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerResponse } from '../../models/serverResponse.model';\r\n// import { SpinnerVisibilityService } from 'ng-http-loader';\r\nimport { catchError, retry, map } from 'rxjs/operators';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { MessageService } from 'primeng/components/common/messageservice';\r\nimport { HandleTokenService } from '../../shared/handleToken/handle-token.service';\r\nimport { HttpParamsOptions } from '@angular/common/http/src/params';\r\n// import { ServerResponse } from '../../models/serverResponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n\r\n})\r\nexport class HttpService {\r\n\r\n\r\n  constructor(private http: HttpClient, private tokenService: HandleTokenService, private messageService: MessageService) { }\r\n\r\n  getHeaders() {\r\n    let httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.tokenService.getToken() || ''\r\n      }),\r\n      params: null\r\n    };\r\n    return httpOptions;\r\n  }\r\n\r\n\r\n  handle401Error(error?: any) {\r\n    if (error.status === 401) {\r\n      // this.spinner.hide();\r\n      this.messageService.add({ severity: 'success', summary: 'Service Message', detail: 'Via MessageService' });\r\n    }\r\n    return error;\r\n  }\r\n\r\n  sendFileUploadPostRequest(url, data): Observable<ServerResponse<any>> {\r\n    var headers = {\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.tokenService.getToken() || '',\r\n        // 'enctype': 'multipart/form-data'\r\n      })\r\n    }\r\n\r\n    // this.spinner.show();\r\n    return this.http.post(url, data, headers)\r\n      .pipe(map((response: any) => {\r\n        console.log(response);\r\n        // this.spinner.hide();\r\n        return response;\r\n      }), catchError(error => {\r\n        this.handle401Error(error);\r\n        return error;\r\n      }))\r\n  }\r\n\r\n  sendPostRequest(url, data): Observable<ServerResponse<any>> {\r\n    var headers = this.getHeaders();\r\n    // this.spinner.show();\r\n    return this.http.post(url, data, headers)\r\n      .pipe(map((response: any) => {\r\n        console.log(response);\r\n        // this.spinner.hide();\r\n        return response;\r\n      }), catchError(error => {\r\n        this.handle401Error(error);\r\n        return error;\r\n      }))\r\n  }\r\n\r\n\r\n  sendGetDownloadtRequest(url, params?): Observable<Blob> {\r\n    var prms = new HttpParams()\r\n    prms = prms.append('fileName', params.fileName);\r\n    // prms = prms.append('secondParameter', parameters.valueTwo);\r\n    var headers = {\r\n      responseType: 'blob' as 'blob',\r\n      params: prms,\r\n      headers: new HttpHeaders({\r\n        'Authorization': this.tokenService.getToken() || '',\r\n        'content-type': 'application/octet-stream',\r\n        // 'Content-Disposition': 'attachment; picture.png'\r\n        // Content-Disposition: attachment; filename=\"picture.png\"\r\n        // 'enctype': 'multipart/form-data',\r\n\r\n      })\r\n\r\n    };\r\n\r\n    // Begin assigning parameters\r\n\r\n    // this.spinner.show();\r\n    return this.http.get(url, headers).pipe(map((response: any) => {\r\n      // console.log(response.json());\r\n      // this.spinner.hide();\r\n      let blob: Blob = new Blob([response], { type: response.type }); // replace the type by whatever type is your response:\r\n\r\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\r\n        window.navigator.msSaveOrOpenBlob(blob, params.fileName);\r\n      } else {\r\n        var blobURL = (window.URL).createObjectURL(blob);\r\n        var anchor = document.createElement(\"a\");\r\n        anchor.download = params.fileName;\r\n        anchor.href = blobURL;\r\n        document.body.appendChild(anchor);\r\n        anchor.click();\r\n        anchor.remove();\r\n      }\r\n\r\n\r\n      return response;\r\n    }), catchError(error => {\r\n      this.handle401Error(error);\r\n      return error;\r\n    }))\r\n  }\r\n\r\n\r\n\r\n  sendGettRequest(url, params?): Observable<ServerResponse<any>> {\r\n    var headers = this.getHeaders();\r\n    let prms = new HttpParams();\r\n\r\n    // Begin assigning parameters\r\n    // prms = prms.append('firstParameter', parameters.valueOne);\r\n    // prms = prms.append('secondParameter', parameters.valueTwo);\r\n    // this.spinner.show();\r\n    return this.http.get(url, headers).pipe(map((response: any) => {\r\n      // console.log(response.json());\r\n      // this.spinner.hide();\r\n      return response;\r\n    }), catchError(error => {\r\n      this.handle401Error(error);\r\n      return error;\r\n    }))\r\n  }\r\n\r\n\r\n  sendDeleteRequest(url, params?): Observable<ServerResponse<any>> {\r\n    var headers = this.getHeaders();\r\n    let prms = new HttpParams();\r\n    prms = prms.append('fileName', params.fileName);\r\n    // Begin assigning parameters\r\n    // prms = prms.append('firstParameter', parameters.valueOne);\r\n    // prms = prms.append('secondParameter', parameters.valueTwo);\r\n    // this.spinner.show();\r\n    headers.params = prms;\r\n    return this.http.delete(url, headers).pipe(map((response: any) => {\r\n      // console.log(response.json());\r\n      // this.spinner.hide();\r\n      return response;\r\n    }), catchError(error => {\r\n      this.handle401Error(error);\r\n      return error;\r\n    }))\r\n  }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nimport * as API_Link from '../assets/data/url.json'\r\nexport const environment = {\r\n  production: false\r\n};\r\nexport const API_URL = (<any>API_Link).API;","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}